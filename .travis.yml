---
sudo: required

language: generic

env:
- distribution: centos
  version: 7
  init: /usr/lib/systemd/systemd
  run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  playbook: test.yml

services:
- docker

before_install:
  # Pull container
- 'sudo docker pull ${distribution}:${version}'
  # Customize container
- 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'

script:
- container_id=$(mktemp)

# Run container in detached state
- 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/ansible-role-nextcloud:ro ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"'

# Ansible syntax check.
- 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/ansible-role-nextcloud/tests/${playbook} --syntax-check'

# Ansible role  check.
- 'sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/ansible-role-nextcloud/tests/${playbook}'

# Test role idempotence.
- >
  sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/ansible-role-nextcloud/tests/${playbook}
  | grep -q 'changed=0.*failed=0'
  && (echo 'Idempotence test: pass' && exit 0)
  || (echo 'Idempotence test: fail' && exit 1)


# Verify that we can see the web frontend
- >
  sudo docker exec "$(cat ${container_id})" curl -s http://127.0.0.1/index.php 2>/dev/null
  | grep -q 'a safe home for all your data'
  && (echo 'Nextcloud test: pass' && exit 0)
  || (echo 'Nextcloud test: fail' && exit 1)

# Clean up
- sudo docker stop "$(cat ${container_id})"

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
